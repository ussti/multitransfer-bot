"""
Browser Fingerprinting Evasion Module - –°–∫—Ä—ã—Ç–∏–µ automation –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
–í–∫–ª—é—á–∞–µ—Ç –º–∞—Å–∫–∏—Ä–æ–≤–∫—É WebDriver, –ø–æ–¥–º–µ–Ω—É navigator properties, stealth —Ä–µ–∂–∏–º
"""

import random
import logging
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from typing import List, Dict, Any

logger = logging.getLogger(__name__)

class StealthBrowser:
    """–ú–æ–¥—É–ª—å –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è automation –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –±—Ä–∞—É–∑–µ—Ä–∞"""
    
    # –°–ø–∏—Å–æ–∫ —Ä–µ–∞–ª—å–Ω—ã—Ö User-Agent —Å—Ç—Ä–æ–∫
    USER_AGENTS = [
        # Chrome –Ω–∞ macOS
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36",
        
        # Chrome –Ω–∞ Windows 10/11
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36",
        
        # Chrome –Ω–∞ Linux
        "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
        "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
    ]
    
    # –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞
    SCREEN_RESOLUTIONS = [
        (1920, 1080),  # Full HD
        (1366, 768),   # Popular laptop
        (1440, 900),   # MacBook Air
        (1280, 720),   # HD
        (1536, 864),   # Scaled
        (1600, 900),   # Wide
        (2560, 1440),  # 2K
    ]
    
    @staticmethod
    def get_stealth_options() -> Options:
        """
        –ü–æ–ª—É—á–∏—Ç—å Chrome options –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–∫—Ä—ã—Ç–∏—è automation
        
        Returns:
            Options: –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ Chrome options
        """
        logger.info("üõ°Ô∏è Creating stealth Chrome options")
        
        options = Options()
        
        # === –û–°–ù–û–í–ù–´–ï STEALTH –ù–ê–°–¢–†–û–ô–ö–ò ===
        
        # –û—Ç–∫–ª—é—á–∏—Ç—å automation —Ñ–ª–∞–≥–∏ (–°–û–í–ú–ï–°–¢–ò–ú–û –° MACOS)
        # NOTE: excludeSwitches –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö undetected-chromedriver
        # options.add_experimental_option("excludeSwitches", ["enable-automation", "enable-logging"])
        # options.add_experimental_option('useAutomationExtension', False)
        
        # –ë–æ–ª–µ–µ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π –ø–æ–¥—Ö–æ–¥ –¥–ª—è macOS
        options.add_argument("--disable-blink-features=AutomationControlled")
        options.add_argument("--disable-automation")
        options.add_argument("--disable-infobars")
        
        # === –ê–ù–¢–ò–î–ï–¢–ï–ö–¢ –§–õ–ê–ì–ò ===
        
        # –û—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–µ—Ç–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã
        options.add_argument("--disable-extensions")
        options.add_argument("--disable-plugins-discovery")
        options.add_argument("--disable-default-apps")
        options.add_argument("--disable-background-timer-throttling")
        options.add_argument("--disable-backgrounding-occluded-windows")
        options.add_argument("--disable-renderer-backgrounding")
        options.add_argument("--disable-field-trial-config")
        options.add_argument("--disable-back-forward-cache")
        options.add_argument("--disable-ipc-flooding-protection")
        
        # –û—Ç–∫–ª—é—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–µ—Ç–µ–∫—Ü–∏–∏
        options.add_argument("--disable-hang-monitor")
        options.add_argument("--disable-prompt-on-repost")
        options.add_argument("--disable-domain-reliability")
        options.add_argument("--disable-component-extensions-with-background-pages")
        options.add_argument("--disable-background-networking")
        
        # === –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨ –ò –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–¨ ===
        
        # –û—Ç–∫–ª—é—á–∏—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
        options.add_argument("--no-default-browser-check")
        options.add_argument("--no-first-run")
        options.add_argument("--disable-default-apps")
        options.add_argument("--disable-popup-blocking")
        options.add_argument("--disable-translate")
        options.add_argument("--disable-background-mode")
        
        # === USER AGENT –†–ê–ù–î–û–ú–ò–ó–ê–¶–ò–Ø ===
        
        selected_ua = random.choice(StealthBrowser.USER_AGENTS)
        options.add_argument(f"--user-agent={selected_ua}")
        logger.debug(f"üé≠ Selected User-Agent: {selected_ua[:50]}...")
        
        # === –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –ü–†–ò–í–ê–¢–ù–û–°–¢–ò ===
        
        # –û—Ç–∫–ª—é—á–∏—Ç—å —Å–ª—É–∂–±—ã Google
        options.add_argument("--disable-sync")
        options.add_argument("--disable-background-downloads")
        options.add_argument("--disable-client-side-phishing-detection")
        options.add_argument("--disable-component-update")
        options.add_argument("--disable-datasaver-prompt")
        
        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç—å—é
        options.add_argument("--max_old_space_size=4096")
        options.add_argument("--disable-dev-shm-usage")
        
        # === –≠–ö–°–ü–ï–†–ò–ú–ï–ù–¢–ê–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò ===
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –∞–Ω—Ç–∏–¥–µ—Ç–µ–∫—Ç–∞
        options.add_experimental_option("prefs", {
            # –û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            "profile.default_content_setting_values.notifications": 2,
            # –û—Ç–∫–ª—é—á–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
            "profile.default_content_setting_values.geolocation": 2,
            # –û—Ç–∫–ª—é—á–∏—Ç—å –º–µ–¥–∏–∞
            "profile.default_content_setting_values.media_stream": 2,
            # –Ø–∑—ã–∫–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            "intl.accept_languages": "en-US,en,ru",
            # –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ
            "profile.password_manager_enabled": False,
            "credentials_enable_service": False,
        })
        
        logger.info("‚úÖ Stealth Chrome options configured")
        return options
    
    @staticmethod
    def inject_stealth_scripts(driver) -> None:
        """
        –í–Ω–µ–¥—Ä–∏—Ç—å JavaScript —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏ browser fingerprint
        
        Args:
            driver: WebDriver –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤
        """
        logger.info("üîß Injecting stealth scripts")
        
        try:
            # === –û–°–ù–û–í–ù–´–ï STEALTH –°–ö–†–ò–ü–¢–´ ===
            
            # 1. –°–∫—Ä—ã—Ç—å webdriver property
            driver.execute_script("""
                Object.defineProperty(navigator, 'webdriver', {
                    get: () => undefined,
                });
            """)
            
            # 2. –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å plugins (–∏–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä)
            driver.execute_script("""
                Object.defineProperty(navigator, 'plugins', {
                    get: () => [1, 2, 3, 4, 5]
                });
            """)
            
            # 3. –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å languages
            driver.execute_script("""
                Object.defineProperty(navigator, 'languages', {
                    get: () => ['en-US', 'en', 'ru']
                });
            """)
            
            # 4. –ü–æ–¥–º–µ–Ω–∞ chrome runtime (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
            driver.execute_script("""
                if (window.chrome && window.chrome.runtime) {
                    Object.defineProperty(window.chrome, 'runtime', {
                        get: () => undefined
                    });
                }
            """)
            
            # 5. Permission API –ø–æ–¥–º–µ–Ω–∞
            driver.execute_script("""
                const originalQuery = window.navigator.permissions.query;
                window.navigator.permissions.query = (parameters) => (
                    parameters.name === 'notifications' ?
                    Promise.resolve({ state: Notification.permission }) :
                    originalQuery(parameters)
                );
            """)
            
            # === –†–ê–°–®–ò–†–ï–ù–ù–´–ï STEALTH –¢–ï–•–ù–ò–ö–ò ===
            
            # 6. –ú–∞—Å–∫–∏—Ä–æ–≤–∫–∞ iframe detection
            driver.execute_script("""
                Object.defineProperty(HTMLIFrameElement.prototype, 'contentWindow', {
                    get: function() {
                        return window;
                    }
                });
            """)
            
            # 7. –ü–æ–¥–º–µ–Ω–∞ screen properties
            screen_width, screen_height = random.choice(StealthBrowser.SCREEN_RESOLUTIONS)
            driver.execute_script(f"""
                Object.defineProperty(screen, 'width', {{
                    get: () => {screen_width}
                }});
                Object.defineProperty(screen, 'height', {{
                    get: () => {screen_height}
                }});
                Object.defineProperty(screen, 'availWidth', {{
                    get: () => {screen_width}
                }});
                Object.defineProperty(screen, 'availHeight', {{
                    get: () => {screen_height - 50}
                }});
            """)
            
            # 8. –ú–∞—Å–∫–∏—Ä–æ–≤–∫–∞ automation indicators
            driver.execute_script("""
                delete window.cdc_adoQpoasnfa76pfcZLmcfl_Array;
                delete window.cdc_adoQpoasnfa76pfcZLmcfl_Promise;
                delete window.cdc_adoQpoasnfa76pfcZLmcfl_Symbol;
                delete window.cdc_adoQpoasnfa76pfcZLmcfl_JSON;
                delete window.cdc_adoQpoasnfa76pfcZLmcfl_Object;
                delete window.cdc_adoQpoasnfa76pfcZLmcfl_Proxy;
            """)
            
            # 9. Hardware concurrency –ø–æ–¥–º–µ–Ω–∞
            cores = random.choice([2, 4, 6, 8, 12, 16])
            driver.execute_script(f"""
                Object.defineProperty(navigator, 'hardwareConcurrency', {{
                    get: () => {cores}
                }});
            """)
            
            # 10. Device memory –ø–æ–¥–º–µ–Ω–∞
            memory = random.choice([2, 4, 8, 16])
            driver.execute_script(f"""
                Object.defineProperty(navigator, 'deviceMemory', {{
                    get: () => {memory}
                }});
            """)
            
            # 11. Connection –ø–æ–¥–º–µ–Ω–∞
            driver.execute_script("""
                Object.defineProperty(navigator, 'connection', {
                    get: () => ({
                        effectiveType: '4g',
                        rtt: 50,
                        downlink: 10
                    })
                });
            """)
            
            logger.info("‚úÖ Stealth scripts injected successfully")
            
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Some stealth scripts failed to inject: {e}")
    
    @staticmethod
    def randomize_viewport(driver) -> None:
        """
        –†–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞
        
        Args:
            driver: WebDriver –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
        """
        width, height = random.choice(StealthBrowser.SCREEN_RESOLUTIONS)
        
        # –ù–µ–º–Ω–æ–≥–æ —É–º–µ–Ω—å—à–∞–µ–º –¥–ª—è –æ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞ (—É—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–º–∫–∏)
        window_width = width - random.randint(0, 100)
        window_height = height - random.randint(50, 150)
        
        try:
            driver.set_window_size(window_width, window_height)
            logger.info(f"üñ•Ô∏è Window size set to: {window_width}x{window_height}")
            
            # –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –æ–∫–Ω–∞
            x = random.randint(0, 100)
            y = random.randint(0, 100)
            driver.set_window_position(x, y)
            logger.debug(f"üìç Window position: ({x}, {y})")
            
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Failed to set window size/position: {e}")
    
    @staticmethod
    def add_realistic_headers(driver) -> None:
        """
        –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ HTTP –∑–∞–≥–æ–ª–æ–≤–∫–∏
        
        Args:
            driver: WebDriver –¥–ª—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        """
        try:
            # –í–Ω–µ–¥—Ä—è–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ fetch –∑–∞–ø—Ä–æ—Å–æ–≤
            driver.execute_script("""
                const originalFetch = window.fetch;
                window.fetch = function(...args) {
                    if (args[1] && args[1].headers) {
                        args[1].headers = {
                            ...args[1].headers,
                            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
                            'Accept-Language': 'en-US,en;q=0.9,ru;q=0.8',
                            'Accept-Encoding': 'gzip, deflate, br',
                            'DNT': '1',
                            'Upgrade-Insecure-Requests': '1',
                            'Sec-Fetch-Dest': 'document',
                            'Sec-Fetch-Mode': 'navigate',
                            'Sec-Fetch-Site': 'none',
                            'Cache-Control': 'max-age=0'
                        };
                    }
                    return originalFetch.apply(this, args);
                };
            """)
            
            logger.debug("üåê Realistic headers injection configured")
            
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Failed to add realistic headers: {e}")
    
    @staticmethod
    def mask_automation_vars(driver) -> None:
        """
        –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∞ automation –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        
        Args:
            driver: WebDriver –¥–ª—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏
        """
        try:
            # –°–ø–∏—Å–æ–∫ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö automation –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            automation_vars = [
                'window.outerHeight',
                'window.outerWidth', 
                'window.chrome.app',
                'window.chrome.webstore',
                'document.$cdc_asdjflasutopfhvcZLmcfl_',
                'document.documentElement.driver',
                'document.documentElement.webdriver',
                'document.documentElement.selenium',
                'document.documentElement.driver'
            ]
            
            # –£–¥–∞–ª—è–µ–º automation –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
            driver.execute_script("""
                // –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ 'cdc_'
                for (let prop in window) {
                    if (prop.includes('cdc_')) {
                        delete window[prop];
                    }
                }
                
                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
                if (window.navigator.webdriver) {
                    delete window.navigator.webdriver;
                }
            """)
            
            logger.debug("üßπ Additional automation variables masked")
            
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Failed to mask automation vars: {e}")
    
    @staticmethod
    def setup_full_stealth_mode(driver) -> None:
        """
        –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ stealth —Ä–µ–∂–∏–º–∞ (–≤—ã–∑—ã–≤–∞—Ç—å –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è driver)
        
        Args:
            driver: WebDriver –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        """
        logger.info("üöÄ Setting up full stealth mode")
        
        try:
            # 1. –û—Å–Ω–æ–≤–Ω—ã–µ stealth —Å–∫—Ä–∏–ø—Ç—ã
            StealthBrowser.inject_stealth_scripts(driver)
            
            # 2. –†–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏—è viewport
            StealthBrowser.randomize_viewport(driver)
            
            # 3. –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
            StealthBrowser.add_realistic_headers(driver)
            
            # 4. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∞
            StealthBrowser.mask_automation_vars(driver)
            
            logger.info("‚úÖ Full stealth mode configured successfully")
            
        except Exception as e:
            logger.error(f"‚ùå Failed to setup full stealth mode: {e}")
            raise
    
    @staticmethod
    def verify_stealth_setup(driver) -> Dict[str, Any]:
        """
        –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å stealth –Ω–∞—Å—Ç—Ä–æ–µ–∫
        
        Args:
            driver: WebDriver –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            
        Returns:
            Dict: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏
        """
        logger.info("üîç Verifying stealth setup")
        
        results = {}
        
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ webdriver property
            webdriver_hidden = driver.execute_script("return navigator.webdriver === undefined;")
            results['webdriver_hidden'] = webdriver_hidden
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ chrome runtime
            chrome_runtime_hidden = driver.execute_script("return window.chrome && window.chrome.runtime === undefined;")
            results['chrome_runtime_hidden'] = chrome_runtime_hidden
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ plugins
            plugins_count = driver.execute_script("return navigator.plugins.length;")
            results['plugins_count'] = plugins_count
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ User Agent
            user_agent = driver.execute_script("return navigator.userAgent;")
            results['user_agent'] = user_agent
            
            # –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            stealth_score = sum([
                webdriver_hidden,
                chrome_runtime_hidden,
                plugins_count > 0
            ])
            
            results['stealth_score'] = f"{stealth_score}/3"
            results['stealth_effective'] = stealth_score >= 2
            
            logger.info(f"üéØ Stealth verification results: {results['stealth_score']} - {'‚úÖ Effective' if results['stealth_effective'] else '‚ö†Ô∏è Needs improvement'}")
            
            return results
            
        except Exception as e:
            logger.error(f"‚ùå Stealth verification failed: {e}")
            return {'error': str(e)}