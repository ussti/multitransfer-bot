#!/usr/bin/env python3
import asyncio
import logging
from selenium import webdriver
from selenium.webdriver.chrome.options import Options

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_minimal_chrome():
    """–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç Chrome"""
    try:
        logger.info("üß™ Testing minimal Chrome setup...")
        
        # –ü—Ä–æ—Å—Ç–µ–π—à–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        options = Options()
        options.add_argument("--headless=new")
        options.add_argument("--no-sandbox")
        options.add_argument("--disable-dev-shm-usage")
        
        # –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä
        driver = webdriver.Chrome(options=options)
        
        # –¢–µ—Å—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        driver.get("https://httpbin.org/ip")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if "origin" in driver.page_source.lower():
            logger.info("‚úÖ Minimal Chrome test PASSED!")
            result = True
        else:
            logger.error("‚ùå Minimal Chrome test FAILED!")
            result = False
        
        driver.quit()
        return result
        
    except Exception as e:
        logger.error(f"‚ùå Minimal Chrome test error: {e}")
        return False

if __name__ == "__main__":
    result = asyncio.run(test_minimal_chrome())
    print(f"Test result: {result}")
