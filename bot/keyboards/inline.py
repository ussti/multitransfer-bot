"""
Inline keyboards for MultiTransfer Bot
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from core.config import get_config

config = get_config()

def get_countries_keyboard() -> InlineKeyboardMarkup:
    """Get keyboard with supported countries"""
    buttons = []
    
    for country_code, country_data in config.multitransfer['supported_countries'].items():
        buttons.append([
            InlineKeyboardButton(
                text=f"üáπüáØ {country_data['name']}" if country_code == 'tajikistan'
                else f"üá¨üá™ {country_data['name']}" if country_code == 'georgia'
                else f"üá∞üá¨ {country_data['name']}",
                callback_data=f"country_{country_code}"
            )
        ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_banks_keyboard(country_code: str) -> InlineKeyboardMarkup:
    """Get keyboard with banks for selected country"""
    country_data = config.multitransfer['supported_countries'].get(country_code)
    if not country_data:
        return InlineKeyboardMarkup(inline_keyboard=[])
    
    buttons = []
    bank_names = {
        'korti_milli': 'üè¶ –ö–æ—Ä—Ç–∏ –ú–∏–ª–ª–∏',
        'azizi_molia': 'üè¶ –ê–∑–∏–∑–∏-–ú–æ–ª–∏—è', 
        'bank_arvand': 'üè¶ –ë–∞–Ω–∫ –ê—Ä–≤–∞–Ω–¥',
        'eskhata_bank': 'üè¶ –≠—Å—Ö–∞—Ç–∞ –ë–∞–Ω–∫',
        'bog_bank': 'üè¶ Bank of Georgia',
        'tbc_bank': 'üè¶ TBC Bank',
        'optima_bank': 'üè¶ –û–ø—Ç–∏–º–∞ –ë–∞–Ω–∫',
        'demir_bank': 'üè¶ –î–µ–º–∏—Ä –ë–∞–Ω–∫'
    }
    
    for bank_code in country_data['banks']:
        bank_name = bank_names.get(bank_code, bank_code)
        buttons.append([
            InlineKeyboardButton(
                text=bank_name,
                callback_data=f"bank_{bank_code}"
            )
        ])
    
    # Add back button
    buttons.append([
        InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Å—Ç—Ä–∞–Ω—ã",
            callback_data="back_to_countries"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_confirmation_keyboard() -> InlineKeyboardMarkup:
    """Get confirmation keyboard"""
    buttons = [
        [
            InlineKeyboardButton(
                text="‚úÖ –í—Å–µ –≤–µ—Ä–Ω–æ, —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å",
                callback_data="confirm_requisites"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
                callback_data="edit_requisites"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
                callback_data="cancel_requisites"
            )
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_currencies_keyboard() -> InlineKeyboardMarkup:
    """Get keyboard with supported currencies"""
    buttons = []
    
    currency_emojis = {
        'RUB': 'üá∑üá∫',
        'USD': 'üá∫üá∏', 
        'EUR': 'üá™üá∫',
        'TJS': 'üáπüáØ',
        'KGS': 'üá∞üá¨',
        'GEL': 'üá¨üá™'
    }
    
    for currency in config.multitransfer['supported_currencies']:
        emoji = currency_emojis.get(currency, 'üí±')
        buttons.append([
            InlineKeyboardButton(
                text=f"{emoji} {currency}",
                callback_data=f"currency_{currency}"
            )
        ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_main_menu_keyboard() -> InlineKeyboardMarkup:
    """Get main menu keyboard"""
    buttons = [
        [
            InlineKeyboardButton(
                text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã",
                callback_data="setup_requisites"
            )
        ],
        [
            InlineKeyboardButton(
                text="üí∞ –°–æ–∑–¥–∞—Ç—å –ø–ª–∞—Ç–µ–∂",
                callback_data="create_payment"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìã –ú–æ–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã",
                callback_data="view_requisites"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìä –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π",
                callback_data="payment_history"
            )
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)