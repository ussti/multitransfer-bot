#!/usr/bin/env python3
"""
Initialize passport data in database
–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from core.database.connection import get_async_session
from core.database.repositories import PassportDataRepository
from core.database.models import Base, engine
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def init_passport_data():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    logger.info("üîÑ Initializing passport data...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    async with engine.begin() as conn:
        await conn.run_sync(Base.metadata.create_all)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    async with get_async_session() as session:
        passport_repo = PassportDataRepository(session)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
        existing_passports = await passport_repo.get_all_passports()
        
        if not existing_passports:
            logger.info("üìù Creating sample passport data...")
            await passport_repo.create_sample_data()
            logger.info("‚úÖ Sample passport data created")
        else:
            logger.info(f"‚ÑπÔ∏è Found {len(existing_passports)} existing passport records")
    
    logger.info("üéØ Passport data initialization completed")

if __name__ == "__main__":
    asyncio.run(init_passport_data())
